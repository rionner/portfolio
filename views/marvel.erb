<%= erb(:_port_nav, :layout => true) %>

<section class="main">

  <h1>marvel tap-it</h1>

  <article class="primary-image">
    <img src="http://i.imgur.com/zCXOTSd.png?1">
  </article>

  <article class="description">
    <h4>The concept</h4>
    <p>
      Build an interactive game inspired by, and consuming, the Marvel API.
    </p>
    <h4>The result (v1.0)</h4>
    <p>
      A two player melee where each player taps a specified key ('A' or 'L' respectively) or their character's image (for touch devices) to attack their opponent to elimination.
    </p>
    <h4><a href="https://github.com/WDI-Woodstock-Schroeder/MarvelTapIt" target="blank">Project Repository</a></h4>
    <h4>Tech</h4>
    <p>
      * Ruby on Rails</br>
      * HTML5</br>
      * CSS</br>
      * Javascript / jQuery</br>
      * Marvel API</br>
      * Heroku
    </p>
  </article>

  <article class="gif">
    <img src="http://i.imgur.com/2djvVqV.gif">
  </article>

  <article class="code-snippets">
    <h4>Snippets</h4>
    <pre class="prettyprint">

  success: function(data){

    $('.hero-thumb').hide(500)
    $('.selected-hero').show(500)

    // grab name and description data from api
    hname = data.data.results[0].name;
    hdescription = data.data.results[0].description;

    // add key value pairs to hero object
    hero.name = hname;
    hero.description = hdescription;
    hero.health = 100;

    // create new img element with class 'hero'
    var img = document.createElement('img');
    img.src = filename;
    img.className = 'hero';

    // prepend new img element to 'selected-hero' element
    $('.selected-hero').prepend(img);
    app.renderHero();
    app.reselectHero();

    // if hero and nemesis elements exist, show play button
    if ($('.nemesis').length && $('.hero').length) {
      app.playGame();
    }
    else {
      $('.play').hide();
    };

  }

    </pre>
    <p>
      Function to render the character data retrieved from the Marvel API.
    </p>
  </article>

</section>
