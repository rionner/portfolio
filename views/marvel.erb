<%= erb(:_port_nav, :layout => true) %>

<main class="main">

  <h1>marvel tap-it</h1>

  <section class="primary-image">
    <img src="http://i.imgur.com/zCXOTSd.png?1">
  </section>

  <section class="description">
    <h4>The concept</h4>
    <p>
      Build an interactive game inspired by, and consuming, the Marvel API.
    </p>
    <h4>The result (v1.0)</h4>
    <p>
      A two player melee where each player taps a specified key ('A' or 'L' respectively) or their character's image (for touch devices) to attack their opponent to elimination.
    </p>
    <h4><a href="https://github.com/WDI-Woodstock-Schroeder/MarvelTapIt" target="blank">Project Repository</a> | <a href="http://marveltapit.herokuapp.com/" target="_blank">Live Site</a></h4>
    <h4>Tech</h4>
    <p>
      * Ruby on Rails</br>
      * HTML5</br>
      * CSS</br>
      * Javascript / jQuery</br>
      * Marvel API</br>
      * Heroku
    </p>
  </section>

  <section class="gif">
    <img src="http://i.imgur.com/2djvVqV.gif">
  </section>

  <section class="code-snippets">
    <h4>Snippets</h4>
    <pre class="prettyprint">

  var app = app || {};

  app.heroClick = function heroClickHandler(){

    $(".hero-thumb").on('click', function() {

      // remove any elements on the page with class of 'hero'
      $('.hero').remove();

      var char = $(this).data("character");
      var filename = $(this).data("filename");
      var hero = {};

      $.ajax({
        method: 'get',
        url: 'http://gateway.marvel.com:80/v1/public/characters/' + char + '?apikey=' + key,
        dataType: 'json',
        success: function(data){

          $(".hero-thumb").hide(500);
          $(".selected-hero").show(500);

          // grab and assign name and description data from api
          hname = data.data.results[0].name;
          hdescription = data.data.results[0].description;

          // add key value pairs to hero object variable
          hero.name = hname;
          hero.description = hdescription;
          hero.health = 100;

          // create new img element with class 'hero'
          var img = document.createElement('img');
          img.src = filename;
          img.className = "hero";

          // prepend new image to class 'selected-hero'
          $('.selected-hero').prepend(img);
          app.renderHero();
          app.reselectHero();

          // if hero and nemesis exist, show play button
          if ($(".nemesis").length && $(".hero").length) {
            app.playGame();
          }
          else {
            $(".play").hide();
          }
        }
      });
    });
  };

    </pre>
    <p>
      On click function to call the Marvel API, hide unneeded elements, and render the character data retrieved in new document elements.
    </p>
  </section>

</main>
